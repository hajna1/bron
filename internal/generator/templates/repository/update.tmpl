{{define "update"}}
    func (r *{{.GoName}}Repository) Update(ctx context.Context, p {{.ModelType}}Update) error{
    updateMap := map[string]interface{}{
        {{- if .UpdatedAt}}
            {{.UpdatedAt.ConstName}}: time.Now(),
        {{- end}}

    }
    {{- with .Columns }}
        {{ range . }}
            if p.{{.GoName}} != nil {
                updateMap[{{.ConstName}}] = &p.{{.GoName}}
            }
        {{ end }}
    {{- end }}

    builder := sq.Update({{.ConstName}}).
    SetMap(updateMap).
    Where({{.ID.ConstName}}, p.{{.ID.GoName}}).
    PlaceholderFormat(sq.Dollar)
    query, args, err := builder.ToSql()
    if err != nil {
    return err
    }
    res, err := r.dbx.ExecContext(
    ctx,
    query,
    args...,
    )
    if err != nil {
    return err
    }
    ra, err := res.RowsAffected()
    if err != nil {
    return fmt.Errorf("no rows affected")
    }
    if ra == 0 {
    return fmt.Errorf("does not exist")
    }
    return nil
    }
{{end}}
